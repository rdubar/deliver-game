# mongo_logger.py
import streamlit as st
import argparse
from datetime import datetime
import os
from pymongo import MongoClient

"""
Manage logging of generated text to MongoDB.
"""


# Setup MongoDB connection
mongo_uri = st.secrets["mongodb"]["uri"] if "mongodb" in st.secrets else os.environ.get('MONGO_URI', '')
client = MongoClient(mongo_uri)
db = client.your_database_name  # Replace with your actual database name
collection = db.your_collection_name  # Replace with your actual collection name

def log_text(generated_text, model=None):
    """
    Logs generated text and current timestamp to MongoDB.
    
    Parameters:
    - generated_text (str): The text generated by the AI model.
    """
    document = {
        "timestamp": datetime.now(),
        "generated_text": generated_text
    }
    if model:
        document["model"] = model
    try:
        collection.insert_one(document)
        print("Log successfully written to MongoDB.")
    except Exception as e:
        print(f"Failed to write log to MongoDB: {e} {len(mongo_uri)} {len(generated_text)}")

def get_all_records():
    """
    Retrieves all records from the MongoDB collection.

    Returns:
    - A list of dictionaries, each representing a document in the collection.
    """
    try:
        records = list(collection.find({}))
        # Optionally, convert ObjectId to string or perform other formatting
        for record in records:
            record['_id'] = str(record['_id'])  # Convert ObjectId to string for easier handling
        return records
    except Exception as e:
        print(f"Failed to retrieve records from MongoDB: {e}")
        return []


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Log generated text to MongoDB.')
    parser.add_argument('-l', '--log', type=str, help='Log the generated text to MongoDB.')
    parser.add_argument('-r', '--retrieve', action='store_true', help='Retrieve all records from MongoDB.')
    args = parser.parse_args()

    if args.log:
        log_text(args.log)
    elif args.retrieve:
        records = get_all_records()
        print(f"Retrieved {len(records)} records from MongoDB.")
        for record in records:
            print(record)
            